#ifndef __HCCFLAGS_H__
#define __HCCFLAGS_H__

enum {
	__HCCFLAGS_LOADED,
	__HCCFLAGS_STARTING,
	__HCCFLAGS_RUNNING,
	__HCCFLAGS_ADDING,
	__HCCFLAGS_REMOVING,
	__HCCFLAGS_RECOVERING,
	__HCCFLAGS_STOPPING,
	__HCCFLAGS_STOPPED,
	__HCCFLAGS_FAILED,
};

#define HCCFLAGS_LOADED (1<<__HCCFLAGS_LOADED)
#define HCCFLAGS_STARTING (1<<__HCCFLAGS_STARTING)
#define HCCFLAGS_RUNNING (1<<__HCCFLAGS_RUNNING)
#define HCCFLAGS_ADDING (1<<__HCCFLAGS_ADDING)
#define HCCFLAGS_REMOVING (1<<__HCCFLAGS_REMOVING)
#define HCCFLAGS_RECOVERING (1<<__HCCFLAGS_RECOVERING)
#define HCCFLAGS_STOPPING (1<<__HCCFLAGS_STOPPING)
#define HCCFLAGS_STOPPED (1<<__HCCFLAGS_STOPPED)
#define HCCFLAGS_FAILED (1<<__HCCFLAGS_FAILED)

extern int hcc_cluster_flags;
extern int hcc_node_flags;

#define IS_KERRIGHED_CLUSTER(m) (hcc_cluster_flags & m)
#define IS_KERRIGHED_NODE(m) (hcc_node_flags & m)

#define SET_KERRIGHED_CLUSTER_FLAGS(m) hcc_cluster_flags |= m
#define SET_KERRIGHED_NODE_FLAGS(m) hcc_node_flags |= m

#define CLEAR_KERRIGHED_CLUSTER_FLAGS(m) hcc_cluster_flags &= ~m
#define CLEAR_KERRIGHED_NODE_FLAGS(m) hcc_node_flags &= ~m

#endif
